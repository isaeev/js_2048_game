{"version":3,"sources":["scripts/main.js"],"names":["data","score","inProgress","start","document","querySelector","messageWin","messageStart","messageLose","isEqual","arr1","arr2","JSON","stringify","tileMovement","direction","i","length","values","nonZeroValues","filter","element","zeroValues","concat","column","row","push","j","mergeTiles","tile","merged","Array","fill","slice","randomizer","count","emptyPositions","randomIndex","Math","floor","random","randomNumber","colorizing","fieldsRows","querySelectorAll","classMap","cellsInRow","cellValue","className","isWin","classList","remove","clearField","domReload","scoreBlock","startRow","startTile","textContent","isGameOver","some","includes","addEventListener","innerText","replace","add","e","prevData","parse","moveExecuted","key"],"mappings":"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","file":"main.1039c0e2.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nlet data = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\nlet score = 0;\nlet inProgress = false;\n\nconst start = document.querySelector('.start');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\n\nstart.addEventListener('click', () => {\n  if (start.innerText === 'Start') {\n    start.innerText = 'Restart';\n    start.classList.replace('start', 'restart');\n    messageStart.classList.add('hidden');\n  } else {\n    clearField();\n    score = 0;\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n  }\n\n  randomizer(2);\n\n  inProgress = true;\n  domReload();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (!inProgress) {\n    return;\n  }\n\n  const prevData = JSON.parse(JSON.stringify(data));\n\n  let moveExecuted = false;\n\n  switch (e.key) {\n    case 'ArrowRight':\n      if (isGameOver() === false) {\n        mergeTiles('right');\n        tileMovement('right');\n        isWin();\n        moveExecuted = true;\n      }\n      break;\n\n    case 'ArrowLeft':\n      if (isGameOver() === false) {\n        mergeTiles('left');\n        tileMovement('left');\n        isWin();\n        moveExecuted = true;\n      }\n      break;\n\n    case 'ArrowDown':\n      if (isGameOver() === false) {\n        mergeTiles('down');\n        tileMovement('down');\n        isWin();\n        moveExecuted = true;\n      }\n      break;\n\n    case 'ArrowUp':\n      if (isGameOver() === false) {\n        mergeTiles('up');\n        tileMovement('up');\n        isWin();\n        moveExecuted = true;\n      }\n      break;\n  }\n\n  if (moveExecuted && !isEqual(prevData, data)) {\n    randomizer(1);\n\n    if (isGameOver()) {\n      inProgress = false;\n      messageLose.classList.remove('hidden');\n      domReload();\n    } else {\n      domReload();\n    }\n  }\n});\n\nfunction isEqual(arr1, arr2) {\n  return JSON.stringify(arr1) === JSON.stringify(arr2);\n}\n\nfunction tileMovement(direction) {\n  for (let i = 0; i < data.length; i++) {\n    let values;\n\n    if (direction === 'right' || direction === 'left') {\n      const nonZeroValues = data[i].filter((element) => element !== 0);\n      const zeroValues = data[i].filter((element) => element === 0);\n\n      values = direction === 'right' ? zeroValues.concat(nonZeroValues)\n        : nonZeroValues.concat(zeroValues);\n      data[i] = values;\n    } else if (direction === 'down' || direction === 'up') {\n      const column = [];\n\n      for (let row = 0; row < data.length; row++) {\n        column.push(data[row][i]);\n      }\n\n      const nonZeroValues = column.filter((element) => element !== 0);\n      const zeroValues = column.filter((element) => element === 0);\n\n      values = direction === 'down' ? zeroValues.concat(nonZeroValues)\n        : nonZeroValues.concat(zeroValues);\n\n      for (let j = 0; j < data.length; j++) {\n        data[j][i] = values[j];\n      }\n    }\n  }\n}\n\nfunction mergeTiles(direction) {\n  for (let tile = 0; tile < data.length; tile++) {\n    let values = [];\n    const merged = Array(data.length).fill(false);\n\n    if (direction === 'down' || direction === 'up') {\n      for (let row = 0; row < data.length; row++) {\n        values.push(data[row][tile]);\n      }\n    } else if (direction === 'left' || direction === 'right') {\n      values = data[tile].slice();\n    }\n\n    const nonZeroValues = values.filter((element) => element !== 0);\n    const zeroValues = values.filter((element) => element === 0);\n\n    if (direction === 'down' || direction === 'right') {\n      for (let i = nonZeroValues.length - 1; i > 0; i--) {\n        if (nonZeroValues[i] === nonZeroValues[i - 1] && !merged[i]) {\n          nonZeroValues[i] += nonZeroValues[i - 1];\n          score += nonZeroValues[i];\n          nonZeroValues[i - 1] = 0;\n          merged[i] = true;\n        }\n      }\n      values = zeroValues.concat(nonZeroValues);\n    } else if (direction === 'up' || direction === 'left') {\n      for (let i = 0; i < nonZeroValues.length - 1; i++) {\n        if (nonZeroValues[i] === nonZeroValues[i + 1] && !merged[i]) {\n          nonZeroValues[i] += nonZeroValues[i + 1];\n          score += nonZeroValues[i];\n          nonZeroValues[i + 1] = 0;\n          merged[i] = true;\n        }\n      }\n      values = nonZeroValues.concat(zeroValues);\n    }\n\n    if (direction === 'down' || direction === 'up') {\n      for (let row = 0; row < data.length; row++) {\n        data[row][tile] = values[row];\n      }\n    } else if (direction === 'left' || direction === 'right') {\n      data[tile] = values.slice();\n    }\n  }\n}\n\nfunction randomizer(count) {\n  for (let i = 0; i < count; i++) {\n    const emptyPositions = [];\n\n    for (let row = 0; row < data.length; row++) {\n      for (let tile = 0; tile < data[row].length; tile++) {\n        if (data[row][tile] === 0) {\n          emptyPositions.push({\n            row, tile,\n          });\n        }\n      }\n    }\n\n    if (emptyPositions.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyPositions.length);\n      const { row, tile } = emptyPositions[randomIndex];\n      const randomNumber = Math.random() * 2 > 1.9 ? 4 : 2;\n\n      data[row][tile] = randomNumber;\n    }\n  }\n}\n\nfunction colorizing() {\n  const fieldsRows = document.querySelectorAll('.field-row');\n\n  const classMap = {\n    0: '',\n    2: 'field-cell--2',\n    4: 'field-cell--4',\n    8: 'field-cell--8',\n    16: 'field-cell--16',\n    32: 'field-cell--32',\n    64: 'field-cell--64',\n    128: 'field-cell--128',\n    256: 'field-cell--256',\n    512: 'field-cell--512',\n    1024: 'field-cell--1024',\n    2048: 'field-cell--2048',\n  };\n\n  for (let row = 0; row < data.length; row++) {\n    const cellsInRow = fieldsRows[row].querySelectorAll('.field-cell');\n\n    for (let tile = 0; tile < data[row].length; tile++) {\n      const cellValue = data[row][tile];\n\n      cellsInRow[tile].className = 'field-cell ' + classMap[cellValue];\n    }\n  }\n}\n\nfunction isWin() {\n  for (const row of data) {\n    for (const tile of row) {\n      if (tile === 2048) {\n        messageWin.classList.remove('hidden');\n        inProgress = false;\n      }\n    }\n  }\n}\n\nfunction clearField() {\n  data = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n}\n\nfunction domReload() {\n  const scoreBlock = document.querySelector('.game-score');\n\n  for (let row = 0; row < data.length; row++) {\n    for (let tile = 0; tile < data.length; tile++) {\n      const startRow = document.querySelectorAll('.field-row')[row];\n      const startTile = startRow.querySelectorAll('.field-cell')[tile];\n\n      if (data[row][tile] === 0) {\n        startTile.textContent = ' ';\n        continue;\n      }\n\n      startTile.textContent = data[row][tile];\n    }\n  }\n\n  scoreBlock.textContent = score;\n  colorizing();\n}\n\nfunction isGameOver() {\n  if (data.some(row => row.includes(0))) {\n    return false;\n  }\n\n  for (let row = 0; row < data.length; row++) {\n    for (let tile = 0; tile < data.length - 1; tile++) {\n      if (data[row][tile] === data[row][tile + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let tile = 0; tile < data.length; tile++) {\n    for (let row = 0; row < data.length - 1; row++) {\n      if (data[row][tile] === data[row + 1][tile]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n"]}